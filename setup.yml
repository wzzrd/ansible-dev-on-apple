---
# file: setup.yml
- name: Base configuration
  hosts: all
  become: true
  gather_facts: false

  pre_tasks:
    - name: Gather subset of facts
      ansible.builtin.setup:
        gather_subset:
          - '!all'
      become: false
      tags:
        - facts

    - name: Copy over requirements.txt
      ansible.builtin.copy:
        src: requirements.txt
        dest: "{{ ansible_user_dir }}/requirements.txt"
        owner: "{{ ansible_user_id }}"
        mode: "0644"
      become: false
      tags:
        - pip

    - name: Gather package facts
      ansible.builtin.package_facts:

    - name: Install python3-dnf5 if needed
      ansible.builtin.command:
        dnf -y install python3-libdnf5
      when: ansible_pkg_mgr == "dnf5"

    - name: Install base packages
      ansible.builtin.dnf:
        name: "{{ item }}"
        state: installed
      loop:
        - direnv
        - git
        - mc
        - vim-enhanced
        - python3
        - python3-virtualenvwrapper
        - glibc-langpack-en
        - glibc-langpack-nl
        - wget2
      when: "item not in ansible_facts.packages"
      tags:
        - packages

    - name: Remove unwanted packages
      ansible.builtin.dnf:
       name: "{{ item }}"
        state: absent
      loop:
        - podman
        - buildah
        - skopeo
      when: "item in ansible_facts.packages"
      tags:
        - packages

    - name: Create virtualenv for Ansible
      ansible.builtin.shell:
        cmd: . /usr/bin/virtualenvwrapper.sh && mkvirtualenv ansible
        creates: "{{ ansible_user_dir }}/.virtualenvs/ansible"
      become: false
      tags:
        - virtualenv

  roles:
    - role: fedora.linux_system_roles.timesync
      vars:
        timesync_ntp_servers:
          - hostname: time.kpn.net
      tags:
        - sysconfig

    - role: haxorof.docker_ce
      tags:
        - packages

    - role: cchurch.virtualenv
      vars:
        virtualenv_user: "{{ ansible_user_id }}"
        virtualenv_path: "{{ ansible_user_dir }}/venv"
        virtualenv_requirements: "{{ ansible_user_dir }}/requirements.txt"
      become: false
      tags:
        - pip

  post_tasks:
    - name: Add my user to docker group
      ansible.builtin.user:
        name: "{{ ansible_user_id }}"
        groups: docker
        append: true
      notify:
        - Reboot machine
      tags:
        - user

    - name: Create Rosetta binfmt configuration file
      ansible.builtin.copy:
        src: files/rosetta.conf
        dest: /usr/lib/binfmt.d/rosetta.conf
        owner: root
        group: root
        mode: "0644"
      tags:
        - binfmt

    - name: Copy over Rosetta SELinux module
      ansible.builtin.copy:
        src: "{{ lookup('first_found', selinux_te_files) }}"
        dest: /root/rosetta.te
        owner: root
        group: root
        mode: "0644"
      vars:
        selinux_te_files:
          - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}/rosetta.te"
          - "{{ ansible_distribution }}/rosetta.te"
          - "{{ ansible_os_family }}/rosetta.te"
      tags:
        - binfmt
        - selinux

    - name: Convert SELinux type enforcement file to policy file
      ansible.builtin.command:
        cmd: checkmodule -M -m -o /root/rosetta.mod /root/rosetta.te
        creates: /root/rosetta.mod
      tags:
        - selinux

    - name: Compile SELinux policy file to policy package
      ansible.builtin.command:
        cmd: semodule_package -o /root/rosetta.pp -m /root/rosetta.mod
        creates: /root/rosetta.pp
      tags:
        - selinux

    - name: Check loaded SELinux modules
      ansible.builtin.command:
        cmd: semodule -l
      register: selinux_modules
      changed_when: false
      tags:
        - selinux

    - name: Load Rosetta SELinux module
      ansible.builtin.command:
        cmd: semodule -i /root/rosetta.pp
      when: "'rosetta' not in selinux_modules.stdout"
      changed_when: "'rosetta' not in selinux_modules.stdout"
      tags:
        - selinux

    - name: Create systemd-binfmt.service.d directory
      ansible.builtin.file:
        path: /etc/systemd/system/systemd-binfmt.service.d/
        state: directory
        owner: root
        group: root
        mode: "0755"
      tags:
        - binfmt

    - name: Copy systemd-binfmt.service drop-in
      ansible.builtin.copy:
        src: systemd-binfmt.override.service
        dest: /etc/systemd/system/systemd-binfmt.service.d/override.conf
        owner: root
        group: root
        mode: "0644"
      notify:
        - Reload systemd
      tags:
        - binfmt

    - name: Enable systemd-binfmt
      ansible.builtin.service:
        name: systemd-binfmt
        enabled: true
      tags:
        - binfmt

  handlers:
    - name: Reboot machine
      ansible.builtin.reboot:

    - name: Reload systemd
      ansible.builtin.systemd_service:
        daemon_reload: true
